{"version":3,"sources":["webpack:///src/app/admin/seller-group-list/seller-group-list.page.scss","webpack:///src/app/admin/seller-group-list/seller-group-list.module.ts","webpack:///src/app/admin/seller-group-list/seller-group-list.page.html","webpack:///src/app/admin/seller-group-list/seller-group-list.page.ts","webpack:///src/app/admin/seller-group-list/seller-group-list-routing.module.ts"],"names":["SellerGroupListPageModule","imports","declarations","SellerGroupListPage","alertController","router","http","loadingController","url","API_URL","groupListGet","formData","FormData","append","post","subscribe","res","status","groupList","response_data","c","id","create","message","buttons","successalrt","fail","text","role","cssClass","handler","blah","loadingShow","console","log","present","loadingHide","err","alert","navigate","loading","dismiss","selector","template","routes","path","component","SellerGroupListPageRoutingModule","forChild","exports"],"mappings":"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","file":"admin-seller-group-list-seller-group-list-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZWxsZXItZ3JvdXAtbGlzdC5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SellerGroupListPageRoutingModule } from './seller-group-list-routing.module';\n\nimport { SellerGroupListPage } from './seller-group-list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SellerGroupListPageRoutingModule\n  ],\n  declarations: [SellerGroupListPage]\n})\nexport class SellerGroupListPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"true\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Group list</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <!-- <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Products...\\n        </div> -->\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-bordered table-striped table-sm\\\">\\n            <thead>\\n              <tr>\\n                <th>Auction CG number</th>\\n                <th>Group name</th>\\n                <th>End date & time</th>\\n                <th>Location</th>\\n                <th>Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let c of groupList\\\">\\n                <td>{{c.auction_cg_number}}</td>\\n                <td>{{c.category_group_name}}</td>\\n                <td>{{c.end_date}} {{c.end_time}}</td>\\n                <td>\\n                  {{c.location}}\\n                </td>\\n                <!-- <td>\\n                  <span class=\\\"badge badge-success\\\" *ngIf=\\\"c.category_status\\\">Active</span>\\n                  <span class=\\\"badge badge-error\\\" *ngIf=\\\"!c.category_status\\\">Inactive</span>\\n                </td> -->\\n                <td>\\n                  <button (click)=\\\"deleteGroup(c)\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button>\\n                  <button (click)=\\\"editGroup(c.id)\\\"><i class=\\\"fa fa-edit\\\" aria-hidden=\\\"true\\\"></i></button>\\n                  <button (click)=\\\"groupItems(c)\\\"><i class=\\\"fa fa-list\\\" aria-hidden=\\\"true\\\"></i></button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <nav>\\n            <ul class=\\\"pagination\\\">\\n              <!-- <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li> -->\\n              <!-- <li class=\\\"page-item active\\\">\\n                <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n              </li> -->\\n              <!-- <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li> -->\\n              <!-- <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li> -->\\n            </ul>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n  </div>\\n</ion-content>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-seller-group-list',\n  templateUrl: './seller-group-list.page.html',\n  styleUrls: ['./seller-group-list.page.scss'],\n})\nexport class SellerGroupListPage implements OnInit {\n  groupList: any;\n  loading: any;\n  url = environment.API_URL;\n\n  constructor(public alertController: AlertController,private router: Router,\n    private http: HttpClient, private loadingController: LoadingController) { }\n\n  ngOnInit() {\n    this.groupListGet();\n  }\n\n  groupListGet(){\n    let formData = new FormData;\n    formData.append('', '');\n    this.http.post(this.url + 'group-all-list', formData).subscribe((res: any)=>{\n      if(res && res.status){\n        this.groupList = res.response_data;\n      }else{\n        this.groupList = null;\n      }\n    })\n  }\n\nasync  deleteGroup(c){\n    \n    let formData = new FormData;\n    formData.append('group_id', c.id);\n   \n\nconst successalrt = await this.alertController.create({\n     message: 'Data successfully delete',\n      buttons: ['OK']\n    });\n  const fail = await this.alertController.create({\n     message: 'Something went wrong',\n      buttons: ['OK']\n    });\n      const alert = await this.alertController.create({\n     \n      message: 'Are you sure to delete',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            //console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Okay',\n          handler: () => {\n            //console.log('Confirm Okay');\n            if( c.id){\n              this.loadingShow();\n              this.http.post(this.url + 'group-remove', formData)\n  .subscribe((res: any) => {\n    // this.res = res.json();\n    console.log(res);\n     if(res.status == false){\n       fail.present();\n   this.loadingHide();\n    \n    }else if(res.status == true){\n    successalrt.present();\n    //this.constructor();\n    //this.navCtrl.navigateForward('address-list');\n   this.loadingHide();\n      this.groupListGet();\n    }else{\n    //alert(\"Server error\");\n   this.loadingHide();\n    }\n  }, (err) => {\n    console.log(err);\n    this.loadingHide();\n  });\n    }\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n    \n  }\n\n  editGroup(id){\n    this.router.navigate(['admin/group-edit', id]);\n    \n  }\n\n  async loadingShow() {\n    this.loading = await this.loadingController.create({\n      message: 'Please wait...',\n      // duration: 2000\n    });\n    await this.loading.present();\n  }\n\n  async loadingHide() {\n    await this.loading.dismiss();\n  }\n\n  groupItems(c){\n    this.router.navigate(['admin/group-details', c.id]);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SellerGroupListPage } from './seller-group-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SellerGroupListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SellerGroupListPageRoutingModule {}\n"]}